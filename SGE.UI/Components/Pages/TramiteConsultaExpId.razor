@page "/tramiteconsultaexpid/{Id:int}"
@rendermode InteractiveServer
@inject CasoDeUsoTramiteConsultaExpId CasoConsulta
@inject CasoDeUsoConsultaUsuarioId UsuarioConsulta
@inject NavigationManager Navigation
<PageTitle>SGE | Tramites</PageTitle>

<h3>Consulta de Tramite por ID de Expediente</h3>
<input placeholder="ID a consultar" @bind="idExp"><br>
<button class="btn btn-primary" @onclick="() => Consultar(idExp)">Aceptar</button><br>
@if (visible)
{
  <table class="table">
    <thead>
      <tr>
        <th>ID</th>
        <th>ID del expediente</th>
        <th>Etiqueta</th>
        <th>Contenido</th>
        <th>Fecha de creacion</th>
        <th>Fecha de modificacion</th>
        <th>Ultimo usuario en modificarlo</th>
      </tr>
    </thead>
    <tbody>
      @foreach (Tramite t in tramites)
      {
        <tr>
          <td>@t.Id</td>
          <td>@t.ExpedienteId</td>
          <td>@t.Etiqueta</td>
          <td>@t.Contenido</td>
          <td>@t.FechayHoraCr</td>
          <td>@t.FechayHoraMod</td>
          <td>@t.IdUser</td>
        </tr>
      }
    </tbody>
  </table>
}
<button class="btn btn-secondary mt-2" @onclick="Volver">Volver al menu</button>

@error

@code {
  [Parameter] public int Id { get; set; }
  Usuario user = new();
  List<Tramite> tramites = new();
  int idExp;
  string error = "";
  bool visible = false;

  protected override void OnInitialized()
  {
    user = UsuarioConsulta.Ejecutar(Id);
    StateHasChanged();
  }

  public void Consultar(int idExp)
  {
    try
    {
      tramites = CasoConsulta.Ejecutar(idExp);
      visible = true;
    }
    catch (Exception ex)
    {
      error = ex.Message;
    }
  }

  public void Volver()
  {
    Navigation.NavigateTo($"home/{user.Id}");
  }
}