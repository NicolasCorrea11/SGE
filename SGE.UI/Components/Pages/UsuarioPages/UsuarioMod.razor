@page "/usermod/{Id:int}"
@rendermode InteractiveServer
@inject CasoDeUsoUsuarioModificacion CasoDeUsoUsuarioModificacion
@inject CasoDeUsoUsuarioConsultaId UsuarioConsulta
@inject NavigationManager Navigation
@inject UsuarioLogeado usuario
<PageTitle>SGE | Usuarios</PageTitle>

@if (usuario.user.Id == 1 || usuario.user.Id == Id)
{
<h3>Modificacion de Usuario</h3>
<h5>Ingresar nuevos datos para @user.Nombre @user.Apellido</h5>
<label for="nom">Nombre: </label>
<input placeholder="Nombre" @bind="user.Nombre" class="form-control" id="nom"><br>
<label for="ape">Apellido: </label>
<input placeholder="Apellido" @bind="user.Apellido" class="form-control" id="ape"><br>
<label for="ema">Email: </label>
<input placeholder="Mail" @bind="user.Email" class="form-control" id="ema"><br>
<label for="pw">Contraseña: </label>
<input type="password" placeholder="" @bind="pass" class="form-control" id="pw"><br>
<button class="btn btn-primary" @onclick="() => Modificar(user)">Guardar cambios</button><br>
}
else
{
<p>el usuario ingresado y el que se quiere modificar no coinciden</p>
}
<br>@error<br>

@code {
    [Parameter] public int Id { get; set; }
    Usuario user = new();
    string pass = "";
    string error = "";

    protected override void OnInitialized()
    {
        try
        {
            user = UsuarioConsulta.Ejecutar(Id);
            StateHasChanged();
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
    public void Modificar(Usuario user)
    {
        try
        {
            user.Contraseña = pass;
            CasoDeUsoUsuarioModificacion.Ejecutar(user);
            Navigation.NavigateTo($"/home");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}
