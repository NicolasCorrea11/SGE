@page "/exptramlistar/{Id:int}"
@rendermode InteractiveServer
@inject CasoDeUsoExpedienteConsultaTodos ConsultaTodos
@inject NavigationManager Navigation
<h3>ExpedienteYTrams</h3>

<input placeholder="ID a consultar" @bind="idexp" class="mt-3 form-control" /><br>
<button class="btn btn-primary" @onclick="() => Consultar(idexp)">Aceptar</button><br>
<button class="btn btn-secondary mt-2" @onclick="Volver">Volver al menu</button>
<br>
Expediente:
<br>
ID: @e.Id <br>
Caratula: @e.Caratula <br>
Estado: @e.Estado <br>
Fecha de creacion: @e.FechayHoraCr <br>
Fecha de modificacion: @e.FechayHoraMod <br>
Ultimo usuario en modificarlo: @e.IdUser <br>
<br>

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>ID del expediente</th>
            <th>Etiqueta</th>
            <th>Contenido</th>
            <th>Fecha de creacion</th>
            <th>Fecha de modificacion</th>
            <th>Ultimo usuario en modificarlo</th>
            </tr>
    </thead>
    <tbody>
        @foreach (object o in lista)
        {
            if(o is Tramite t) 
            {
                <tr>
                <td>@t.Id</td>
                <td>@t.ExpedienteId</td>
                <td>@t.Etiqueta</td>
                <td>@t.Contenido</td>
                <td>@t.FechayHoraCr</td>
                <td>@t.FechayHoraMod</td>
                <td>@t.IdUser</td>
            </tr>
            }
        }
    </tbody>
</table>

@code {
    [Parameter] public int Id {get; set;}
    List<object> lista = [];
    string error = "";
    Expediente e = new();
    int idexp;

    public void Consultar(int idex)
    {
        try
        {
            lista = ConsultaTodos.Ejecutar(idex);
            e = (Expediente)lista[0];
            StateHasChanged();
        }
        catch (Exception e)
        {
            error = e.Message;
        }
    }

    public void Volver()
    {
        Navigation.NavigateTo($"home/{Id}");
    }
}
