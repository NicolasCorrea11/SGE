@page "/expbaja"
@rendermode InteractiveServer
@inject CasoDeUsoExpedienteBaja CasoBaja
@inject CasoDeUsoExpedienteConsultaId ConsultaIdExp
@inject NavigationManager Navigation
@inject UsuarioLogeado usuario
<PageTitle>SGE | Expedientes</PageTitle>

<h3>Baja de Expediente</h3>
@if (!visible)
{
    <label for="inp">Id de expediente a eliminar</label>
    <input placeholder="ID a eliminar" @bind="idExp" class="mt-3 form-control" id="inp"/>
    <button class="btn btn-primary mt-2" @onclick="() => Buscar(idExp)">Buscar</button>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Caratula</th>
                <th>Estado</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@e.Id</td>
                <td>@e.Caratula</td>
                <td>@e.Estado</td>
            </tr>
        </tbody>
    </table>
    <button class="btn btn-primary" @onclick="() => Eliminar(idExp)">Eliminar</button>
}
<br>
<button class="btn btn-secondary mt-2" @onclick="Volver">Volver al menu</button>
<br>
<CuadroDialogo @ref=dialogo Mensaje=@error />



@code {
    [Parameter] public int Id { get; set; }
    Expediente e = new();
    int idExp;
    string error = "";
    bool visible = false;
    CuadroDialogo dialogo = null!;

    public void Buscar(int id)
    {
        try
        {
            e = ConsultaIdExp.Ejecutar(id);
            visible = true;
            error = "";
        }
        catch (Exception err)
        {
            error = err.Message;
            dialogo.Mostrar();
        }
    }

    public void Eliminar(int idExp)
    {
        try
        {
            CasoBaja.Ejecutar(idExp, usuario.user);
            Navigation.NavigateTo($"/home");
        }
        catch (Exception err)
        {
            error = err.Message;
        }
    }

    public void Volver()
    {
        Navigation.NavigateTo($"/home");
    }
}
