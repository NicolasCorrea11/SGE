@page "/expalta/{Id:int}"
@rendermode InteractiveServer
@inject CasoDeUsoExpedienteAlta CasoAlta
@inject CasoDeUsoUsuarioConsultaId UsuarioConsulta
@inject NavigationManager Navigation
<PageTitle>SGE | Expediente</PageTitle>

<h3>Alta de Expediente</h3>
<form>
    <label for="carat">Caratula del expediente: </label>
    <input class="mt-3 form-control" placeholder="Caratula" @bind="e.Caratula" id="carat" />
    <label for="despl">Estado del expediente: </label>
    <select class="form-control" @bind="strEstado" id="despl">
        <option value="" disabled selected>Seleccione un estado</option>
        <option>RecienIniciado</option>
        <option>ParaResolver</option>
        <option>ConResolucion</option>
        <option>EnNotificacion</option>
        <option>Finalizado</option>
    </select><br>
</form>
@if (@error == "Must specify valid information for parsing in the string. (Parameter 'value')")
{
    error = "Debe seleccionar un estado";
}
@error
<br>
<button class="btn btn-primary" @onclick="() => Agregar(e)">Aceptar</button><br>
<button class="btn btn-secondary mt-2" @onclick="Volver">Volver al menu</button>

@code {
    [Parameter] public int Id { get; set; }
    Expediente e = new();
    Usuario user = new();
    string strEstado = "";
    string error = "";

    protected override void OnInitialized()
    {
        try
        {
            user = UsuarioConsulta.Ejecutar(Id);
        }
        catch
        {
            Navigation.NavigateTo("/");
        }
    }

    void Agregar(Expediente e)
    {
        try
        {
            e.Estado = (EstadoExpediente)Enum.Parse(typeof(EstadoExpediente), strEstado);
            CasoAlta.Ejecutar(e, user);
            Navigation.NavigateTo($"/explistar/{Id}");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }

    }

    void Volver()
    {
        Navigation.NavigateTo($"home/{Id}");
    }

}
