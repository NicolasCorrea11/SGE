@page "/expmod"
@rendermode InteractiveServer
@inject CasoDeUsoExpedienteModificacion CasoDeUsoExpedienteModificacion
@inject CasoDeUsoExpedienteConsultaId ConsultaIdExp
@inject NavigationManager Navigation
@inject SesionActual Sesion
<PageTitle>SGE | Expedientes</PageTitle>

<h3>Modificacion de Expediente</h3>
@if (!visible)
{
    <label class="mt-2" for="idExp">ID a modificar:</label>
    <input class="form-control" @bind="idExp" id="idExp">
    <button class="btn btn-primary mt-2" @onclick="() => Consultar(idExp)">Buscar</button><br>
}
else
{
    <form>
        <label class="mt-2" for="carat">Caratula:</label>
        <input class="form-control" @bind="e.Caratula" id="carat">
        <select class="form-control" @bind="strEstado" id="est">
            <option value="" disabled selected>Seleccione un estado</option>
            <option>RecienIniciado</option>
            <option>ParaResolver</option>
            <option>ConResolucion</option>
            <option>EnNotificacion</option>
            <option>Finalizado</option>
        </select><br>
    </form>
    <button class="btn btn-primary mt-2" @onclick="() => Modificar(e)">Guardar cambios</button><br>
}
<button class="btn btn-secondary mt-2" @onclick="Volver">Volver al menu</button><br>
<CuadroDialogo @ref=dialogo Mensaje=@error />


@code {
    string error = "";
    Expediente e = new();
    string strEstado = "";
    bool visible = false;
    int idExp;
    CuadroDialogo dialogo = null!;

    void Consultar(int idExp)
    {
        try
        {
            e = ConsultaIdExp.Ejecutar(idExp);
            visible = true;
            error = "";
        }
        catch (Exception ex)
        {
            error = ex.Message;
            dialogo.Mostrar();
            visible = false;
        }
    }

    void Modificar(Expediente e)
    {
        try
        {
            e.Estado = (EstadoExpediente)Enum.Parse(typeof(EstadoExpediente), strEstado);
            CasoDeUsoExpedienteModificacion.Ejecutar(e, Sesion.User);
            Navigation.NavigateTo($"/explistar");
        }
        catch (Exception ex)
        {
            error = ex.Message;
            if (error == "Must specify valid information for parsing in the string. (Parameter 'value')")
            {
                error = "Debe seleccionar un estado";
            }
            dialogo.Mostrar();
        }
    }
    void Volver() => Navigation.NavigateTo($"/home");
}
