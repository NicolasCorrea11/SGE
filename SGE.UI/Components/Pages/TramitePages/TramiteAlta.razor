@page "/tramitealta"
@rendermode InteractiveServer
@inject CasoDeUsoTramiteAlta CasoAlta
@inject NavigationManager Navigation
@inject CasoDeUsoExpedienteConsultaId ConsultaIdExp
@inject UsuarioLogeado usuario
<PageTitle>SGE | Tramite</PageTitle>
<h3>Alta de Tramite</h3>

<form>
  <label for="cont">Contenido: </label>
  <input class="mt-3 form-control" @bind="t.Contenido" id="cont">
  <label for="etiq">Etiqueta: </label>
  <select class="form-control mt-3" @bind="strEtiqueta" id="etiq">
    <option value="" disabled selected>Seleccione una etiqueta</option>
    <option>EscritoPresentado</option>
    <option>PaseAEstudio</option>
    <option>Despacho</option>
    <option>Resolucion</option>
    <option>Notificacion</option>
    <option>PaseAlArchivo</option>
  </select>
  <label for="expid">Id del expediente asociado: </label>
  <input class="form-control" @bind="t.ExpedienteId" id="expid"><br>
</form>
<button class="btn btn-primary" @onclick="() => Agregar(t)">Aceptar</button><br>
<button class="btn btn-secondary mt-2" @onclick="Volver">Volver al menu</button>
<br>
<CuadroDialogo @ref=dialogo Mensaje=@error />

@code {
  Tramite t = new();
  string strEtiqueta = "";
  string error = "";
  Expediente exp = new();
  CuadroDialogo dialogo = null!;

  void Agregar(Tramite t)
  {
    try
    {
      exp = ConsultaIdExp.Ejecutar(t.ExpedienteId);
      t.Etiqueta = (EtiquetaTramite)Enum.Parse(typeof(EtiquetaTramite), strEtiqueta);
      CasoAlta.Ejecutar(t, usuario.user);
      Navigation.NavigateTo($"/tramitelistar");
    }
    catch (Exception ex)
    {
      error = ex.Message;
      if (error == "Must specify valid information for parsing in the string. (Parameter 'value')")
      {
        error = "Debe seleccionar una etiqueta";
      } 
      dialogo.Mostrar();
    }
  }

  public void Volver()
  {
    Navigation.NavigateTo($"/home");
  }
}