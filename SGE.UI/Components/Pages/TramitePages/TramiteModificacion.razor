@page "/tramitemodificacion/{Id:int}"
@rendermode InteractiveServer
@inject CasoDeUsoTramiteModificacion CasoModificacion
@inject CasoDeUsoUsuarioConsultaId UsuarioConsulta
@inject CasoDeUsoTramiteConsultaId CasoConsulta
@inject NavigationManager Navigation
<PageTitle>SGE | Tramite</PageTitle>

<h3>Modificacion de Tramite</h3>
<label for="consid">Id del tramite a modificar</label>
<input class="mt-3 form-control" placeholder="Id del tramite" @bind="idTram" id="consid"><br>
<button class="btn btn-primary" @onclick="() => Consultar(idTram)">Buscar</button><br>
@if (visible)
{
  <form>
    <label for="cont">Contenido: </label>
    <input class="form-control" placeholder="Contenido" @bind="t.Contenido" id="cont"><br>
    <label for="etiq">Etiqueta: </label>
    <select class="form-control" @bind="strEtiqueta" id="etiq">
      <option value="" disabled selected>Seleccione una etiqueta</option>
      <option>EscritoPresentado</option>
      <option>PaseAEstudio</option>
      <option>Despacho</option>
      <option>Resolucion</option>
      <option>Notificacion</option>
      <option>PaseAlArchivo</option>
    </select><br>
  </form>
  <button class="btn btn-primary" @onclick="() => Modificar(t)">Guardar cambios</button>

  <br>
}
<button class="btn btn-secondary mt-2" @onclick="Volver">Volver al menu</button>
<br>
@if (@error == "Value cannot be null. (Parameter 'value')")
{
  error = "Debe seleccionar una etiqueta";
}
<CuadroDialogo @ref=dialogo Mensaje=@error />

@code {
  [Parameter] public int Id { get; set; }
  Tramite t = new();
  Usuario user = new();
  string error = "";
  int idTram;
  bool visible = false;
  string strEtiqueta = "";
  CuadroDialogo dialogo = null!;

  public void Consultar(int idTram)
  {
    try
    {
      t = CasoConsulta.Ejecutar(idTram);
      visible = true;
      error = "";
    }
    catch (Exception ex)
    {
      error = ex.Message;   
      visible = false;
      dialogo.Mostrar();
    }
  }

  protected override void OnInitialized()
  {
    try
    {
      user = UsuarioConsulta.Ejecutar(Id);
    }
    catch
    {
      Navigation.NavigateTo("/");
    }
  }

  void Modificar(Tramite t)
  {
    try
    {
      t.Etiqueta = (EtiquetaTramite)Enum.Parse(typeof(EtiquetaTramite), strEtiqueta);
      CasoModificacion.Ejecutar(t, user);
      Navigation.NavigateTo($"/home/{user.Id}");
    }
    catch (Exception ex)
    {
      error = ex.Message;
      dialogo.Mostrar();
    }
  }

  void Volver() => Navigation.NavigateTo($"home/{Id}");
}