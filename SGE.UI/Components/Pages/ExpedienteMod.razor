@page "/expmod/{Id:int}"
@rendermode InteractiveServer
@inject CasoDeUsoExpedienteModificacion CasoDeUsoExpedienteModificacion
@inject NavigationManager Navigation
@inject CasoDeUsoConsultaUsuarioId UsuarioConsulta
<PageTitle>SGE | Expedientes</PageTitle>

<h3>Modificacion de Expediente</h3>
<form>
    <input class="mt-3 form-control" placeholder="Id del expediente" @bind="e.Id"><br>
    <input class="form-control" placeholder="Caratula" @bind="e.Caratula"><br>
    <select class="form-control" @bind="strEstado">
        <option value="" disabled selected>Seleccione un estado</option>
        <option>RecienIniciado</option>
        <option>ParaResolver</option>
        <option>ConResolucion</option>
        <option>EnNotificacion</option>
        <option>Finalizado</option>
    </select><br>
</form>
@error
<button class="btn btn-primary" @onclick="() => Modificar(e)">Aceptar</button><br>
<button class="btn btn-secondary mt-2" @onclick="Volver">Volver al menu</button>


@code {
    [Parameter] public int Id { get; set; }
    string error = "";
    Expediente e = new();
    Usuario user = new();
    string strEstado = "";

    public void Modificar(Expediente ex)
    {
        try
        {
            e.Estado = (EstadoExpediente)Enum.Parse(typeof(EstadoExpediente), strEstado);
            CasoDeUsoExpedienteModificacion.Ejecutar(e, user);
            Navigation.NavigateTo($"/home/{Id}");
        }
        catch (Exception e)
        {
            error = e.Message;
        }
    }
    protected override void OnInitialized()
    {
        user = UsuarioConsulta.Ejecutar(Id);
        StateHasChanged();
    }
    public void Volver()
    {
        Navigation.NavigateTo($"home/{Id}");
    }

}
